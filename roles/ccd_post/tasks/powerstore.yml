- name: Get PowerStore Cluster Info
  dellemc.powerstore.cluster:
    array_ip: "{{ powerstore_ip }}"
    verifycert: no
    user: "{{ powerstore_user }}"
    password: "{{ powerstore_password }}"
    cluster_id: "0"
    state: present
  register: clusterinfo

- name: Store PowerStore System ID
  set_fact:
    powerstore_system_id: "{{ clusterinfo.cluster_details.global_id }}"

- name: Configure PowerStore CSI driver
  block:
    - name: Ensure powerstore namespace exists
      kubernetes.core.k8s:
        kind: Namespace
        name: powerstore
        state: present

    - name: Copy powerstore CSI driver zip file to kickstart
      unarchive:
        src: powerstore-csi.zip
        dest: '/root'

    - name: Find CSI driver directory
      find:
        path: /root/
        file_type: directory
        use_regex: yes
        recurse: yes
        patterns:
          - '^csi-powerstore'
      register: find_csi_install_dir

    - name: Download and install Kubernetes Snapshot Support
      include_tasks: dell_snapshot.yml

    - name: Set csi_dir variable
      set_fact:
        csi_dir: "{{ find_csi_install_dir.files | map(attribute='path') | first}}"
       
    - name: Copy files needed for CSI driver installation
      template:
        src: powerstore_values.yaml.j2
        dest: '{{ csi_dir}}/powerstore_values.yaml'

    - name: Create secret for PowerStore CSI Driver
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          type: Opaque
          metadata:
            name: powerstore-config
            namespace: powerstore
          data:
            config: "{{ lookup('template','powerstore_secret.yaml.j2') | from_yaml| b64encode }}"

    - name: Check if PowerStore deployment already exists
      kubernetes.core.k8s_info:
        kind: Deployment
        name: powerstore-controller
        namespace: powerstore
      register: powerstore_csi_installed

    - name: Install CSI driver
      shell: './csi-install.sh --namespace powerstore --values {{ csi_dir}}/powerstore_values.yaml --skip-verify-node --skip-verify'
      args:
        chdir: '{{ csi_dir }}/dell-csi-helm-installer'
      register: csi_install
      ignore_errors: true
      when:  powerstore_csi_installed.resources is defined and powerstore_csi_installed.resources|length == 0
      environment:
        KUBECONFIG: "/tmp/{{ deployment_name }}.admin.conf"

    - name: Display output from CSI driver installation
      debug:
        msg: '{{ csi_install.stdout }}'
      when: powerstore_csi_installed.resources is defined and powerstore_csi_installed.resources|length == 0

    - name: Create StorageClass for PowerStore CSI Driver
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template','powerstore_nfs_storage_class.yaml.j2')| from_yaml }}"

  always:
    - name: 'Cleanup {{ csi_dir }}'
      file:
        path: '{{ csi_dir }}'
        state: absent
